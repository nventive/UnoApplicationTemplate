# Use this to schedule a build at defined days and times
# schedules:
# - cron: "30 08 * * Mon-Fri" # Format is "Minutes Hours DayOfMonth Month DayOfWeek" in UTC (that's why 08 is 3h EST)
#   displayName: 'Nightly weekdays build - 3:30 EST'
#   always: false # If nothing changed, don't start a new run.
#   branches:
#     include:
#       - main
#       - develop
#       - release/*
#       - feature/*

pr:
 branches:
   include:
   - main
   - release/*
   - feature/*

trigger:
  branches:
    include:
      - main

variables:
- name: system.debug
  value: true
#-if false
- name: IsReleaseBranch
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
#-endif
- template: build/variables.yml

stages:
- stage: Commit_Validation
  dependsOn: []
  jobs:
    - template: build/stage-commit-validation.yaml

#-if false
# This special if is used to remove those Dotnet_New stages for generated application.
- stage: Dotnet_New_GeneratedApp
  dependsOn: Commit_Validation
  jobs:
  - template: .template.config/build/stage-donetnew.yaml

- stage: Build_Staging_GeneratedApp
  dependsOn: Dotnet_New_GeneratedApp
  jobs:
  - template: build/stage-build.yml
    parameters:
      pathToSrc: '$(Pipeline.Workspace)/GeneratedApp/src'
      solutionName: 'GeneratedApp'
      pathToInfoPlist: '$(Pipeline.Workspace)/GeneratedApp/src/app/GeneratedApp.Mobile/iOS/Info.plist'
      pathToAndroidManifest: '$(Pipeline.Workspace)/GeneratedApp/src/app/GeneratedApp.Mobile/Android/AndroidManifest.xml'
      applicationEnvironment: Generated_Staging
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'
      iosProvisioningProfileFile: $(InternalProvisioningProfile)
      iosCertificateFile: $(InternalCertificate)
      iosVariableGroup: 'ApplicationTemplate.Distribution.Internal.iOS'

- stage: Publish_Template_Package
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'), eq(variables['IsReleaseBranch'], 'true'))
  dependsOn:
   - Build_Staging_GeneratedApp
   - Build_Staging
  jobs:
  - template: .template.config/build/stage-publish-template.yml

#-endif
- stage: Build_Staging
  dependsOn: Commit_Validation
  jobs:
  - template: build/stage-build.yml
    parameters:
      applicationEnvironment: Staging
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'
      iosProvisioningProfileFile: $(InternalProvisioningProfile)
      iosCertificateFile: $(InternalCertificate)
      iosVariableGroup: 'ApplicationTemplate.Distribution.Internal.iOS'
      BannerVersionNameText: "STAGING"

- stage: FirebaseDistribution_TestFlight_Staging
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Staging
  jobs:
  - template: build/stage-release-firebase-app-distribution.yml
    parameters:
      applicationEnvironment: Staging
      deploymentEnvironment: Firebase App Distribution
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'
      serviceConnectionKeyFileName: $(FirebaseAppDistributionServiceConnection)
      artifactFileName: 'com.nventive.internal.applicationtemplate-Signed.apk'

  - template: build/stage-release-appstore.yml
    parameters:
      applicationEnvironment: Staging
      deploymentEnvironment: TestFlight

- stage: Build_Production
  dependsOn: Build_Staging
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  jobs:
  - template: build/stage-build.yml
    parameters:
      applicationEnvironment: Production
      androidKeyStoreFile: $(GooglePlayKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.GooglePlay'
      iosProvisioningProfileFile: $(AppStoreProvisioningProfile)
      iosCertificateFile: $(AppStoreCertificate)
      iosVariableGroup: 'ApplicationTemplate.Distribution.AppStore'

- stage: FirebaseDistribution_Production
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Production
  jobs:
  - template: build/stage-release-firebase-app-distribution.yml
    parameters:
      applicationEnvironment: Production
      deploymentEnvironment: Firebase App Distribution
      androidVariableGroup: 'ApplicationTemplate.Distribution.GooglePlay'
      serviceConnectionKeyFileName: $(FirebaseAppDistributionServiceConnection)
      artifactFileName: 'com.nventive.applicationtemplate-Signed.apk'

- stage: AppStore
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Production
  jobs:
  - template: build/stage-release-appstore.yml
    parameters:
      applicationEnvironment: Production
      deploymentEnvironment: AppStore

- stage: GooglePlay
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Production
  jobs:
  - template: build/stage-release-googleplay.yml
    parameters:
      applicationEnvironment: Production
      deploymentEnvironment: GooglePlay
