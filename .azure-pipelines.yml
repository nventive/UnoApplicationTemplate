schedules:
- cron: "30 08 * * Mon-Fri" # Format is "Minutes Hours DayOfMonth Month DayOfWeet" in UTC (that's why 08 is 3h EST)
  displayName: 'Nightly weekdays build - 3:30 EST'
  always: false # If nothing changed, don't start a new run.
  branches:
    include:
      - master
      - release/*
      - feature/*
pr:
 branches:
   include:
   - master
   - release/*
   - feature/*

trigger:
  branches:
    include:
      - master

resources:
  containers:
    - container: windows
      image: nventive/vs_build-tools:16.11.9

variables:
- template: build/variables.yml

stages:
- stage: Build_Staging
  condition: eq(variables['IsCanary'], 'false')
  jobs:
  - template: build/stage-build.yml
    parameters:
      applicationEnvironment: Staging
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'
      iosProvisioningProfileFile: $(InternalProvisioningProfile)
      iosCertificateFile: $(InternalCertificate)
      iosVariableGroup: 'ApplicationTemplate.Distribution.Internal.iOS'

- stage: Build_Production
  dependsOn: Build_Staging # Use dependsOn: [] if you want to run both builds in parallel.
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  jobs:
  - template: build/stage-build.yml
    parameters:
      applicationEnvironment: Production
      androidKeyStoreFile: $(GooglePlayKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.GooglePlay'
      iosProvisioningProfileFile: $(AppStoreProvisioningProfile)
      iosCertificateFile: $(AppStoreCertificate)
      iosVariableGroup: 'ApplicationTemplate.Distribution.AppStore'

# Build steps for the Canary
# Build the project the same as prod and QA builds, but update all nuget packages to latest
- stage: Build_Canary
  condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['IsCanary'], 'true'))
  dependsOn: []
  jobs:
  - template: build/stage-build.yml
    parameters:
      applicationEnvironment: Staging
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'
      iosProvisioningProfileFile: $(InternalProvisioningProfile)
      iosCertificateFile: $(InternalCertificate)
      iosVariableGroup: 'ApplicationTemplate.Distribution.Internal.iOS'
    
- stage: AppCenter_Staging
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Staging

  jobs:
  - template: build/stage-release-appcenter.yml
    parameters:
      applicationEnvironment: Staging
      deploymentEnvironment: AppCenter
      appCenterUWPSlug: $(AppCenterUWPSlug)
      appCenteriOSSlug: $(AppCenteriOSSlug)
      appCenterAndroidSlug: $(AppCenterAndroidSlug)
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'

- stage: AppCenter_Production
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Production

  jobs:
  - template: build/stage-release-appcenter.yml
    parameters:
      applicationEnvironment: Production
      deploymentEnvironment: 'AppCenter Prod'
      appCenterUWPSlug: $(AppCenterUWPSlug_Production)
      appCenteriOSSlug: $(AppCenteriOSSlug_Production)
      appCenterAndroidSlug: $(AppCenterAndroidSlug_Production)
      androidKeyStoreFile: $(GooglePlayKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.GooglePlay'

- stage: AppCenter_Canary
  condition: and(succeeded(), eq(variables['IsCanary'], 'true'))
  dependsOn: Build_Canary

  jobs:
  - template: build/stage-release-appcenter.yml
    parameters:
      applicationEnvironment: Staging
      deploymentEnvironment: AppCenter
      appCenterUWPSlug: $(AppCenterUWPSlug_Canary)
      appCenteriOSSlug: $(AppCenteriOSSlug_Canary)
      appCenterAndroidSlug: $(AppCenterAndroidSlug_Canary)
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'

# - stage: Azure
#   condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
#   dependsOn: Build_Production

#   jobs:
#   - template: build/stage-release-wasm.yml

- stage: AppStore
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Production

  jobs:
  - template: build/stage-release-appstore.yml
    parameters:    
      applicationEnvironment: Production
      deploymentEnvironment: AppStore

- stage: GooglePlay
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Production

  jobs:
  - template: build/stage-release-googleplay.yml
    parameters:    
      applicationEnvironment: Production
      deploymentEnvironment: GooglePlay
