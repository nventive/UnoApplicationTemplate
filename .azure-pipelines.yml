# Use this to schedule a build at defined days and times
# schedules:
# - cron: "30 08 * * Mon-Fri" # Format is "Minutes Hours DayOfMonth Month DayOfWeet" in UTC (that's why 08 is 3h EST)
#   displayName: 'Nightly weekdays build - 3:30 EST'
#   always: false # If nothing changed, don't start a new run.
#   branches:
#     include:
#       - master
#       - main
#       - develop
#       - release/*
#       - feature/*
pr:
 branches:
   include:
   - master
   - release/*
   - feature/*

trigger:
  branches:
    include:
      - master

resources:
  containers:
    - container: windows
      image: nventive/vs_build-tools:16.11.9
#-if false
    - container: windowsNet6 # .Net 6 is required for the dotnet new to work properly because of this bug: https://github.com/dotnet/templating/pull/2939
      image: nventive/vs_build-tools:17.1.1
#-endif

variables:
- template: build/variables.yml

stages:
#-if false
# This special if is used to remove those Dotnet_New stages for generated apps.
- stage: Dotnet_New_GeneratedApp
  jobs:
  - template: build/stage-donetnew.yaml

- stage: Build_Staging_GeneratedApp
  dependsOn: Dotnet_New_GeneratedApp
  jobs:
  - template: build/stage-build.yml
    parameters:
      pathToSrc: '$(Pipeline.Workspace)/GeneratedApp/src'
      solutionFileName: 'GeneratedApp.sln'
      pathToInfoPlist: '$(Pipeline.Workspace)/GeneratedApp/src/app/GeneratedApp.iOS/Info.plist'
      applicationEnvironment: Generated_Staging
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'
      iosProvisioningProfileFile: $(InternalProvisioningProfile)
      iosCertificateFile: $(InternalCertificate)
      iosVariableGroup: 'ApplicationTemplate.Distribution.Internal.iOS'
#-endif
- stage: Build_Staging
#-if false
  dependsOn: []
#-endif
  jobs:
  - template: build/stage-build.yml
    parameters:
      applicationEnvironment: Staging
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'
      iosProvisioningProfileFile: $(InternalProvisioningProfile)
      iosCertificateFile: $(InternalCertificate)
      iosVariableGroup: 'ApplicationTemplate.Distribution.Internal.iOS'

- stage: Build_Production
  dependsOn: Build_Staging # Use dependsOn: [] if you want to run both builds in parallel.
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  jobs:
  - template: build/stage-build.yml
    parameters:
      applicationEnvironment: Production
      androidKeyStoreFile: $(GooglePlayKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.GooglePlay'
      iosProvisioningProfileFile: $(AppStoreProvisioningProfile)
      iosCertificateFile: $(AppStoreCertificate)
      iosVariableGroup: 'ApplicationTemplate.Distribution.AppStore'

- stage: AppCenter_Staging
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Staging

  jobs:
  - template: build/stage-release-appcenter.yml
    parameters:
      applicationEnvironment: Staging
      deploymentEnvironment: AppCenter
      appCenterUWPSlug: $(AppCenterUWPSlug)
      appCenteriOSSlug: $(AppCenteriOSSlug)
      appCenterAndroidSlug: $(AppCenterAndroidSlug)
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'
      appCenterServiceConnectionName: $(AppCenterServiceConnection)
      appCenterDistributionGroup: $(AppCenterDistributionGroup)

- stage: AppCenter_Production
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Production

  jobs:
  - template: build/stage-release-appcenter.yml
    parameters:
      applicationEnvironment: Production
      deploymentEnvironment: 'AppCenter Prod'
      appCenterUWPSlug: $(AppCenterUWPSlug_Production)
      appCenteriOSSlug: $(AppCenteriOSSlug_Production)
      appCenterAndroidSlug: $(AppCenterAndroidSlug_Production)
      androidKeyStoreFile: $(GooglePlayKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.GooglePlay'
      appCenterServiceConnectionName: $(AppCenterServiceConnection)
      appCenterDistributionGroup: $(AppCenterDistributionGroup)

- stage: AppStore
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Production

  jobs:
  - template: build/stage-release-appstore.yml
    parameters:
      applicationEnvironment: Production
      deploymentEnvironment: AppStore

- stage: GooglePlay
  condition: and(succeeded(), eq(variables['IsLightBuild'], 'false'))
  dependsOn: Build_Production

  jobs:
  - template: build/stage-release-googleplay.yml
    parameters:
      applicationEnvironment: Production
      deploymentEnvironment: GooglePlay
