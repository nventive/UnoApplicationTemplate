<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:c="using:ApplicationTemplate.Views.Controls">

	<!-- 
		IMPORTANT DOCUMENTATION:
		https://github.com/unoplatform/uno/blob/master/doc/articles/controls/CommandBar.md
	-->

	<win:ControlTemplate x:Key="XamlMaterialCommandBarTemplate"
						 TargetType="CommandBar">
		<!-- Simplified CommandBar template that adds support for Uno.UI.CommandBarExtensions.NavigationCommand on Windows. -->
		<Grid x:Name="LayoutRoot"
			  win:Height="48"
			  Background="{TemplateBinding Background}">

			<Grid x:Name="ContentRoot"
				  Margin="{TemplateBinding Padding}"
				  Background="{TemplateBinding Background}"
				  Opacity="{TemplateBinding Opacity}">

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<!-- Note: NavigationCommand is an AppBarButton, not an ICommand. -->
				<ContentControl Content="{Binding (toolkit:CommandBarExtensions.NavigationCommand), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullableAppBarButtonToAppBarButton}}"
								Foreground="{TemplateBinding Foreground}"
								MaxHeight="{StaticResource MaterialCommandBarHeight}"
								MaxWidth="{StaticResource MaterialCommandBarHeight}"
								IsTabStop="False" />

				<!--
					Use a ContentControl rather than a ContentPresenter so that IsEnabled can be set to false
					in the Minimal/HiddenClosed states to remove it from being a tab-stop candidate.
				-->
				<ContentControl x:Name="ContentControl"
								Grid.Column="1"
								Margin="16,0"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTransitions="{TemplateBinding ContentTransitions}"
								Foreground="{TemplateBinding Foreground}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								IsTabStop="False" />

				<ItemsControl x:Name="PrimaryItemsControl"
							  HorizontalAlignment="Right"
							  MinHeight="{ThemeResource AppBarThemeCompactHeight}"
							  IsTabStop="False"
							  Grid.Column="2">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Horizontal" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
				</ItemsControl>
			</Grid>
		</Grid>
	</win:ControlTemplate>

	<win:Style x:Key="CommandBarStyle"
			   TargetType="CommandBar">

		<!-- Needed to avoid getting a crash when using a style with CommandBarExtensions.NavigationCommand. -->
		<Setter Property="toolkit:CommandBarExtensions.NavigationCommand"
				Value="{x:Null}" />
		
		<!-- Setting content to empty to avoid getting the DataContext. -->
		<Setter Property="Content"
				Value="" />
		
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Text="{Binding}"
							   Style="{StaticResource TitleLarge}"
							   Foreground="{ThemeResource OnPrimaryColor}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="Height"
				Value="{StaticResource MaterialCommandBarHeight}" />

		<Setter Property="HorizontalAlignment"
				Value="Stretch" />

		<Setter Property="VerticalAlignment"
				Value="Top" />

		<Setter Property="HorizontalContentAlignment"
				Value="Left" />

		<Setter Property="VerticalContentAlignment"
				Value="Center" />

		<Setter Property="OverflowButtonVisibility"
				Value="Collapsed" />

		<Setter Property="IsDynamicOverflowEnabled"
				Value="False" />

		<Setter Property="Template"
				Value="{StaticResource XamlMaterialCommandBarTemplate}" />
	</win:Style>

	<Style x:Key="DefaultCommandBarStyle"
		   TargetType="CommandBar"
		   BasedOn="{StaticResource CommandBarStyle}">

		<Setter Property="toolkit:CommandBarExtensions.BackButtonForeground"
				Value="{StaticResource AlternateOnBackgroundBrush}" />

		<Setter Property="Background"
				Value="{ThemeResource AlternateBackgroundBrush}" />

		<Setter Property="Foreground"
				Value="{ThemeResource AlternateOnBackgroundBrush}" />

		<Setter Property="Height"
				Value="NaN" />

		<Setter Property="toolkit:VisibleBoundsPadding.PaddingMask"
				Value="Top" />
	</Style>

	<Style x:Key="TransparentCommandBarStyle"
		   TargetType="CommandBar">

		<!-- Needed to avoid getting a crash when using a style with CommandBarExtensions.NavigationCommand. -->
		<Setter Property="toolkit:CommandBarExtensions.NavigationCommand"
				Value="{x:Null}" />

		<Setter Property="toolkit:CommandBarExtensions.BackButtonForeground"
				Value="{StaticResource AlternateOnBackgroundBrush}" />

		<Setter Property="Height"
				Value="NaN" />

		<Setter Property="Background"
				Value="Transparent" />

		<Setter Property="Foreground"
				Value="{StaticResource AlternateOnBackgroundBrush}" />

		<win:Setter Property="Template"
				Value="{StaticResource XamlMaterialCommandBarTemplate}" />
	</Style>
	
	<!-- Default Style -->
	<Style TargetType="CommandBar"
		   BasedOn="{StaticResource DefaultCommandBarStyle}" />

</ResourceDictionary>
