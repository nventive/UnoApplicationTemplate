<UserControl x:Class="ApplicationTemplate.Views.Content.Diagnostics.ConfigurationDebuggerView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="using:ApplicationTemplate.Views.Content.Diagnostics"
			 xmlns:nvc="using:Nventive.View.Converters"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:android="http://uno.ui/android"
			 xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:xamarin="http://uno.ui/xamarin"
			 mc:Ignorable="d xamarin android"
			 d:DesignHeight="300"
			 d:DesignWidth="400">

	<UserControl.Resources>
		<Style x:Key="ConfigurationDebuggerSubtitleStyle"
			   TargetType="TextBlock">
			<Setter Property="FontSize"
					Value="14" />
			<Setter Property="Foreground"
					Value="White" />
			<Setter Property="FontWeight"
					Value="SemiBold" />
		</Style>

		<Style x:Key="ConfigurationDebuggerBodyStyle"
			   TargetType="TextBlock">
			<Setter Property="FontSize"
					Value="12" />
			<Setter Property="Foreground"
					Value="White" />
			<Setter Property="FontWeight"
					Value="Normal" />
		</Style>

		<SolidColorBrush x:Key="FocusBorderBrush"
						 Color="#88FFFFFF" />

		<Style x:Key="ConfigurationDebuggerTextBoxStyle"
			   TargetType="TextBox">
			<Setter Property="FontSize"
					Value="11" />
			<android:Setter Property="FontFamily"
							Value="monospace" />
			<not_android:Setter Property="FontFamily"
								Value="Courier New" />
			<Setter Property="TextWrapping"
					Value="Wrap" />
			<Setter Property="AcceptsReturn"
					Value="True" />
			<!-- Workaround for this issue is to not set IsReadOnly to true. https://github.com/unoplatform/uno/issues/9908 -->
			<!--<Setter Property="IsReadOnly"
					Value="True" />-->
			<Setter Property="IsSpellCheckEnabled"
					Value="False" />
			<Setter Property="Foreground"
					Value="White" />
			<Setter Property="BorderBrush"
					Value="#44FFFFFF" />
			<Setter Property="Padding"
					Value="2" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TextBox">
						<Grid x:Name="Root"
							  Background="#AA000000"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  CornerRadius="{TemplateBinding CornerRadius}"
							  Padding="{TemplateBinding Padding}">

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver" />
									<VisualState x:Name="Pressed" />
									<VisualState x:Name="Disabled" />
									<VisualState x:Name="Focused">
										<VisualState.Setters>
											<Setter Target="Root.BorderBrush"
													Value="{StaticResource FocusBorderBrush}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="HeaderStates">
									<VisualState x:Name="NotEmpty" />
									<VisualState x:Name="Empty" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<ScrollViewer x:Name="ContentElement"
										  Grid.Column="1"
										  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
										  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
										  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
										  IsTabStop="False"
										  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
										  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
										  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										  VerticalAlignment="Bottom"
										  ZoomMode="Disabled"
										  AutomationProperties.AccessibilityView="Raw">
							</ScrollViewer>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<x:String x:Key="UpArrowPathData">M0 0L-5 -5L-10 0H0Z</x:String>
		<x:String x:Key="DownArrowPathData">M0 0L5 5L10 0H0Z</x:String>

		<Style x:Key="ConfigurationDebuggerButtonStyle"
			   TargetType="Button">

			<Setter Property="FontSize"
					Value="12" />
			<Setter Property="HorizontalAlignment"
					Value="Left" />
			<Setter Property="Foreground"
					Value="White" />
			<Setter Property="Background"
					Value="#AA000000" />
			<Setter Property="Padding"
					Value="4,4" />
			<Setter Property="MinWidth"
					Value="0" />
			<Setter Property="Margin"
					Value="0,1" />
			<Setter Property="BorderThickness"
					Value="0" />
			<Setter Property="MinHeight"
					Value="0" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">

						<Grid VerticalAlignment="{TemplateBinding VerticalAlignment}"
							  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver" />
									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="BackgroundBorder.Opacity"
													Value="0.8" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="BackgroundBorder.Opacity"
													Value="0.6" />
											<Setter Target="ContentPresenter.Opacity"
													Value="0.5" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<!-- Background Border -->
							<Border x:Name="BackgroundBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}" />

							<!-- ContentPresenter -->
							<ContentPresenter x:Name="ContentPresenter"
											  Margin="{TemplateBinding Padding}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  AutomationProperties.AccessibilityView="Raw"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ConfigurationDebuggerComboBoxItemStyle"
			   TargetType="ComboBoxItem">

			<Setter Property="Background"
					Value="Transparent" />
			<Setter Property="Foreground"
					Value="White" />

			<Setter Property="FontSize"
					Value="12" />

			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="HorizontalContentAlignment"
					Value="Stretch" />
			<Setter Property="Padding"
					Value="16,0" />
			<Setter Property="Height"
					Value="40" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBoxItem">
						<Grid x:Name="RootGrid"
							  Background="{TemplateBinding Background}">

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver" />
									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="PressedOverlay.Opacity"
													Value="1" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Disabled" />

									<VisualState x:Name="Selected">
										<VisualState.Setters>
											<Setter Target="PressedOverlay.Opacity"
													Value="1" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="SelectedPointerOver">
										<VisualState.Setters>
											<Setter Target="PressedOverlay.Opacity"
													Value="1" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="SelectedDisabled" />

									<VisualState x:Name="SelectedPressed">
										<VisualState.Setters>
											<Setter Target="PressedOverlay.Opacity"
													Value="1" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<!--  Pressed Overlay  -->
							<Grid x:Name="PressedOverlay"
								  HorizontalAlignment="Stretch"
								  VerticalAlignment="Stretch"
								  Background="#33FFFFFF"
								  IsHitTestVisible="False"
								  Opacity="0" />

							<!--  ContentPresenter  -->
							<ContentPresenter x:Name="ContentPresenter"
											  Padding="{TemplateBinding Padding}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ConfigurationDebuggerComboBoxStyle"
			   TargetType="ComboBox">

			<Setter Property="Foreground"
					Value="White" />
			<Setter Property="Background"
					Value="#DD000000" />
			<Setter Property="FontSize"
					Value="12" />
			<Setter Property="Padding"
					Value="4" />
			
			<Setter Property="TabNavigation"
					Value="Once" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
					Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
					Value="Auto" />
			<Setter Property="ScrollViewer.HorizontalScrollMode"
					Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollMode"
					Value="Auto" />
			<Setter Property="ScrollViewer.IsVerticalRailEnabled"
					Value="True" />
			<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
					Value="False" />
			<Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
					Value="True" />
			<Setter Property="HorizontalContentAlignment"
					Value="Stretch" />
			<Setter Property="HorizontalAlignment"
					Value="Stretch" />

			<Setter Property="ItemContainerStyle"
					Value="{StaticResource ConfigurationDebuggerComboBoxItemStyle}" />

			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<CarouselPanel />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid x:Name="RootGrid"
							  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							  Background="{TemplateBinding Background}"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver" />
									<VisualState x:Name="Pressed" />
									<VisualState x:Name="Disabled" />
								</VisualStateGroup>

								<VisualStateGroup x:Name="DropDownStates">

									<VisualState x:Name="Opened">
										<VisualState.Setters>
											<Setter Target="DropDownGlyph_Down.Visibility"
													Value="Collapsed" />
											<Setter Target="DropDownGlyph_Up.Visibility"
													Value="Visible" />
										</VisualState.Setters>
										<Storyboard>

											<SplitOpenThemeAnimation ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 ClosedTargetName="ContentPresenter"
																	 ContentTargetName="ScrollViewer"
																	 ContentTranslationOffset="0"
																	 OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 OpenedTargetName="PopupBorder" />
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Closed">
										<VisualState.Setters>
											<Setter Target="DropDownGlyph_Down.Visibility"
													Value="Visible" />
											<Setter Target="DropDownGlyph_Up.Visibility"
													Value="Collapsed" />
										</VisualState.Setters>
										<Storyboard>
											<SplitCloseThemeAnimation ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  ClosedTargetName="ContentPresenter"
																	  ContentTargetName="ScrollViewer"
																	  ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  ContentTranslationOffset="40"
																	  OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  OpenedTargetName="PopupBorder" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid x:Name="ComboBoxContent"
								  Padding="{TemplateBinding Padding}">
								<!--<Grid.Resources>
									--><!--  Resources added here in order to manage the ContentPresenter TranslateY depending if there is a PlaceholderText or not  --><!--
									<CompositeTransform x:Key="ContentPresenter_CompositeTransformWithPlaceholder"
														TranslateY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToContentTranslateYConverter}, TargetNullValue=0, FallbackValue=0}" />

									<CompositeTransform x:Key="ContentPresenter_CompositeTransformWithoutPlaceholder"
														TranslateY="0" />

									<um:FromEmptyStringToValueConverter x:Key="EmptyToCompositeTransformConverter"
																		NotNullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithPlaceholder}"
																		NullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}" />
								</Grid.Resources>-->

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<!--  ContentPresenter  -->
								<ContentPresenter x:Name="ContentPresenter"
												  Grid.Column="1"
												  MaxLines="1"
												  VerticalAlignment="Center" />

								<!--  Down  -->
								<Path x:Name="DropDownGlyph_Down"
									  Grid.Column="2"
									  Width="10"
									  Height="5"
									  Margin="7,0"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  Data="{StaticResource DownArrowPathData}"
									  Fill="White"
									  Stretch="Uniform" />

								<!--  Up  -->
								<Path x:Name="DropDownGlyph_Up"
									  Grid.Column="2"
									  Width="10"
									  Height="5"
									  Margin="7,0"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  Data="{StaticResource UpArrowPathData}"
									  Fill="White"
									  Stretch="Uniform"
									  Visibility="Collapsed" />
							</Grid>

							<!--  Popup  -->
							<Popup x:Name="Popup">
								<Border x:Name="PopupBorder"
										Background="#DD000000">

									<ScrollViewer x:Name="ScrollViewer"
												  MinWidth="{ThemeResource ComboBoxPopupThemeMinWidth}"
												  AutomationProperties.AccessibilityView="Raw"
												  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
												  CornerRadius="4"
												  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
												  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
												  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
												  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
												  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
												  VerticalSnapPointsAlignment="Near"
												  VerticalSnapPointsType="OptionalSingle"
												  ZoomMode="Disabled">
										<ItemsPresenter />
									</ScrollViewer>
								</Border>
							</Popup>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<SolidColorBrush x:Key="NormalBrush">White</SolidColorBrush>
		<SolidColorBrush x:Key="WarningBrush">Yellow</SolidColorBrush>


		<nvc:FromNullableBoolToCustomValueConverter x:Key="TrueToYellow"
													TrueValue="{StaticResource WarningBrush}"
													NullOrFalseValue="{StaticResource NormalBrush}" />

	</UserControl.Resources>

	<Grid>
		<ScrollViewer>
			<StackPanel Margin="0,0,0,200">
				<!-- Json Configuration -->
				<TextBox Text="{Binding ConfigurationAsJson}"
						 Style="{StaticResource ConfigurationDebuggerTextBoxStyle}" />

				<!-- Configuration Editor -->

				<!-- Subtitle -->
				<TextBlock Text="Editor"
						   Style="{StaticResource ConfigurationDebuggerSubtitleStyle}"
						   Margin="0,4,0,0" />

				<Grid Margin="0,2,4,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					
					<!-- Configuration Key Input -->
					<TextBox Text="{Binding ConfigurationKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							 Style="{StaticResource ConfigurationDebuggerTextBoxStyle}"
							 Padding="4,8" />

					<!-- Picker for existing keys -->
					<ComboBox ItemsSource="{Binding AllKeys}"
							  SelectedItem="{Binding SelectedKey, Mode=TwoWay}"
							  Style="{StaticResource ConfigurationDebuggerComboBoxStyle}"
							  Grid.Column="1"
							  Height="30"
							  Width="40"
							  Margin="2,0,0,0"/>
				</Grid>

				<Grid Margin="0,2,4,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>

					<!-- Configuration Value Input -->
					<TextBox Text="{Binding ConfigurationValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							 Style="{StaticResource ConfigurationDebuggerTextBoxStyle}"
							 FontSize="12"
							 Padding="4,6"/>

					<Button Content="Save"
							Command="{Binding Save}"
							Style="{StaticResource ConfigurationDebuggerButtonStyle}"							
							Grid.Column="1"
							Width="40"
							Margin="2,0,0,0"/>
				</Grid>

				<!-- Clear configuration override button -->
				<Button Content="Delete configuration override file"
						Command="{Binding DeleteConfigurationOverride}"
						Style="{StaticResource ConfigurationDebuggerButtonStyle}" />

				<!-- Environment Editor -->

				<!-- Subtitle -->
				<TextBlock Text="Environment"
						   Style="{StaticResource ConfigurationDebuggerSubtitleStyle}"
						   Margin="0,4,0,0" />

				<!-- Description -->
				<TextBlock Style="{StaticResource ConfigurationDebuggerBodyStyle}">
					<Run Text="The app was launched using:" />
					<Run Text="{Binding CurrentEnvironment}"
						 Foreground="{Binding IsNextEnvironmentDifferentThanCurrent, Converter={StaticResource TrueToYellow}}" /><Run Text="." /><LineBreak />
					<Run Text="Upon next launch, it will be:" />
					<Run Text="{Binding NextEnvironment}"
						 Foreground="{Binding IsNextEnvironmentDifferentThanCurrent, Converter={StaticResource TrueToYellow}}" /><Run Text="." />
				</TextBlock>

				<StackPanel Orientation="Horizontal">
					<!-- Picker -->
					<ComboBox ItemsSource="{Binding AvailableEnvironments}"
							  SelectedItem="{Binding SelectedEnvironment, Mode=TwoWay}"
							  Style="{StaticResource ConfigurationDebuggerComboBoxStyle}"
							  Grid.Column="1"
							  HorizontalAlignment="Left" />

					<!-- Reset Button -->
					<Button Content="{Binding ResetEnvironmentContent}"
							Command="{Binding ResetEnvironment}"
							Style="{StaticResource ConfigurationDebuggerButtonStyle}"
							Margin="4,0" />

				</StackPanel>
			</StackPanel>
		</ScrollViewer>

	</Grid>
</UserControl>
