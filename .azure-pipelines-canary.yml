trigger: # Start a new run as soon as a "canaries/build/(...)" branch is created.
  branches:
    include:
      - canaries/build/*
      
variables:
- template: build/variables.yml

# Build the project using the desired parameters (in this case same as staging), but update all nuget packages to latest.
stages:
- stage: Build_Canary
  condition: and(ne(variables['IsLightBuild'], 'true'), eq(variables['IsCanary'], 'true'))
  dependsOn: []
  jobs:
  - template: build/stage-build.yml
    parameters:
      applicationEnvironment: Staging
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'
      iosProvisioningProfileFile: $(InternalProvisioningProfile)
      iosCertificateFile: $(InternalCertificate)
      iosVariableGroup: 'ApplicationTemplate.Distribution.Internal.iOS'
      removeHyperlinksFromReleaseNotes: true
      BannerVersionNameText: "CANARY"

- stage: AppCenter_TestFlight_Canary
  condition: and(succeeded(), eq(variables['IsCanary'], 'true'))
  dependsOn: Build_Canary

  jobs:
  - template: build/stage-release-appcenter.yml
    parameters:
      applicationEnvironment: Staging
      deploymentEnvironment: AppCenter
      appCenterWindowsSlug: $(AppCenterWindowsSlug_Canary)
      appCenteriOSSlug: $(AppCenteriOSSlug_Canary)
      appCenterAndroidSlug: $(AppCenterAndroidSlug_Canary)
      androidKeyStoreFile: $(InternalKeystore)
      androidVariableGroup: 'ApplicationTemplate.Distribution.Internal.Android'
      appCenterServiceConnectionName: $(AppCenterCanaryServiceConnection)
      appCenterDistributionGroup: $(AppCenterCanaryDistributionGroup)

  - template: build/stage-release-appstore.yml
    parameters:
      applicationEnvironment: Staging
      deploymentEnvironment: TestFlight