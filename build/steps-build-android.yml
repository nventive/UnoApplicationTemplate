parameters:
- name: androidKeyStoreFile
  type: string
  default: ''
- name: pathToSrc
  type: string
  default: ''
- name: solutionName
  type: string
  default: ''
- name: pathToAndroidManifest
  type: string
  default: ''

steps:
- template: templates/dotnet-install.yml

#-if false
- download: current
  condition: eq('GeneratedApp', '${{ parameters.solutionName }}')
  artifact: GeneratedApp
#-endif

- template: templates/gitversion.yml

- task: DownloadSecureFile@1
  name: keyStore
  displayName: "Download Keystore from Secure Files"
  inputs:
    secureFile: ${{ parameters.androidKeyStoreFile }}

- task: android-manifest-package-name@1
  displayName: "Update Bundle Identifier"
  inputs:
    sourcePath: ${{ parameters.pathToAndroidManifest }}
    packageName: $(ApplicationIdentifier)
    printFile: true

- task: android-manifest-version@1
  displayName: "Bump Android Manifest Version"
  inputs:
    sourcePath: ${{ parameters.pathToAndroidManifest }}
    versionCode: $(PreReleaseNumber)
    versionName: $(MajorMinorPatch)
    printFile: true

- task: JavaToolInstaller@0
  displayName: "Install Java SDK 11"
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- script: >
    dotnet $(dotNetCommand) ${{ parameters.pathToSrc }}/app/${{ parameters.solutionName }}.Mobile
    -f:$(BuildTargetFramework)
    -c:Release
    /p:InformationalVersion=$(GitVersion.InformationalVersion)
    /p:AndroidSigningKeyStore=$(keyStore.secureFilePath)
    /p:AndroidSigningStorePass=$(AndroidSigningStorePass)
    /p:AndroidSigningKeyPass=$(AndroidSigningKeyPass)
    /p:AndroidSigningKeyAlias=$(AndroidSigningKeyAlias)
    /p:AndroidKeyStore=true
    /bl:$(build.artifactstagingdirectory)/build-$(BuildTargetFramework).binlog
    /p:IsLightBuild=$(IsLightBuild)
  displayName: Build Project for Release

- task: CopyFiles@2
  displayName: 'Copy Binary Files'
  retryCountOnTaskFailure: 3
  inputs:
    SourceFolder: '${{ parameters.pathToSrc }}/app/${{ parameters.solutionName }}.Mobile/bin/Release/net8.0-android'
    Contents: |
      **/*.aab
      **/*.apk
    TargetFolder: $(build.ArtifactStagingDirectory)
    CleanTargetFolder: false
    OverWrite: true
    flattenFolders: true

- publish: $(Build.ArtifactStagingDirectory)
  displayName: 'Publish Artifact'
  condition: always()
  artifact: $(ArtifactName)

#-if false
- task: DeleteFiles@1
  displayName: "Remove Downloaded Artifacts (GeneratedApp Folder)"
  condition: always()
  inputs:
    SourceFolder: $(Pipeline.Workspace)/GeneratedApp
    RemoveSourceFolder: true
    Contents: '**'
#-endif

- task: PostBuildCleanup@3
  displayName: 'Post-Build Cleanup: Cleanup files to keep build server clean!'
  condition: always()