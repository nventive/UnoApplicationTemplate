parameters:
- name: applicationEnvironment
  type: string
  default: ''
- name: androidKeyStoreFile
  type: string
  default: ''
- name: androidVariableGroup
  type: string
  default: ''
- name: iosCertificateFile
  type: string
  default: ''
- name: iosProvisioningProfileFile
  type: string
  default: ''
- name: iosVariableGroup
  type: string
  default: ''

jobs:
  - job: On_Windows # Build UWP and Android on a windows machine
    strategy:
      maxParallel: 3
      matrix:
        Android:
          ApplicationConfiguration: Release_Android
          ApplicationPlatform: Any CPU
          ArtifactName: $(AndroidArtifactName)_${{ parameters.applicationEnvironment }}
          ApplicationEnvironment: ${{ parameters.applicationEnvironment }}
        UWP:
          ApplicationConfiguration: Release_UWP
          ApplicationPlatform: Any CPU
          ArtifactName: $(UWPArtifactName)_${{ parameters.applicationEnvironment }}
          ApplicationEnvironment: ${{ parameters.applicationEnvironment }}
        Tests:
          ApplicationConfiguration: Release_Tests
          ApplicationPlatform: Any CPU
          ArtifactName: $(TestsArtifactName)_${{ parameters.applicationEnvironment }}
          ApplicationEnvironment: ${{ parameters.applicationEnvironment }}
          
    pool:
      name: $(windowsPoolName)

    variables:
    - group: ${{ parameters.androidVariableGroup }}
    
    container: windows

    steps:
      - template: steps-build.yml
        parameters:
          androidKeyStoreFile: ${{ parameters.androidKeyStoreFile }}

  - job: On_Mac # Build iOS on a mac
    strategy:
      maxParallel: 3
      matrix:
        iOS:
          ApplicationConfiguration: Release_iOS
          ApplicationPlatform: Any CPU
          ArtifactName: $(iOSArtifactName)_${{ parameters.applicationEnvironment }}
          ApplicationEnvironment: ${{ parameters.applicationEnvironment }}   
    pool:
      name: $(macOSPoolName)
      demands:
        - Xamarin.iOS_Version -equals $(XAMARIN_IOS_VERSION)
      
    variables:
    - name: SkipUnknownFrameworks
      value: true # Used by TargetFrameworks.Filtering package to build only what's possible on a mac for the multitargeted library
    - group: ${{ parameters.iosVariableGroup }}

    steps:
    - task: UseDotNet@2
      displayName: 'Install .Net Core runtime 2.1.x'
      inputs:
        version: 2.1.x
        packageType: 'runtime'
        installationPath: '$(Agent.ToolsDirectory)/dotnet'
        
    - template: steps-build.yml
      parameters:
        iosProvisioningProfileFile: ${{ parameters.iosProvisioningProfileFile }}
        iosCertificateFile: ${{ parameters.iosCertificateFile }}
        iosCertificatePassword: $(AppleCertificatePassword)