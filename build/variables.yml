variables:
  # Prerequisites - Variable groups
  # Make sure you have the following variable groups in your Azure pipeline library:
  #
  # ApplicationTemplate.Distribution.Internal.Android
  #   ApplicationIdentifier: This is the internal application id of the app for AppCenter releases. Note that this variable is used by Nimue to automatically change the package name.
  #   AndroidSigningKeyAlias: This is the keystore alias.
  #   AndroidSigningKeyPass: This is the keystore keypass (secured).
  #   AndroidSigningStorePass: This is the keystore storepass (secured).
  #
  # ApplicationTemplate.Distribution.GooglePlay
  #   ApplicationIdentifier: This is the official application id of the app that should go on the store. Note that this variable is used by Nimue to automatically change the package name.
  #   AndroidSigningKeyAlias: This is the keystore alias.
  #   AndroidSigningKeyPass: This is the keystore keypass (secured).
  #   AndroidSigningStorePass: This is the keystore storepass (secured).
  #
  # ApplicationTemplate.Distribution.Internal.iOS
  #   ApplicationIdentifier: This is the internal application id of the app for AppCenter releases. Note that this variable is used by Nimue to automatically change the bundle id.
  #   AppleCertificatePassword: The certificate password (secured).
  #
  # ApplicationTemplate.Distribution.AppStore
  #   ApplicationIdentifier: The official bundle id of the app that should go on the store; the app will be resigned with this id. Note that this variable is used by Nimue to automatically change the bundle id.
  #   AppleCertificatePassword: The certificate password (secured).
  #   AppleTeamId: The developer account team id (secured).
  #   AppleTeamName: The developer account team name.

  # Prerequisites - Secured files
  # Make sure you have the following secured files in your Azure pipeline library.
  #
  # Android
  InternalKeystore: com.nventive.internal.applicationtemplate.jks # This is the internal keystore used for internal builds.
  GooglePlayKeystore: com.nventive.applicationtemplate.jks # This is the official keystore used for Google Play.
  # iOS
  InternalProvisioningProfile: com.nventive.internal.applicationtemplate.mobileprovision # This is the internal provisioning profile for internal builds.
  InternalCertificate: nventive.internal.p12 # This is the certificate from the entreprise account used to sign internal builds.
  AppStoreProvisioningProfile: com.nventive.applicationtemplate.mobileprovision # This is the official provisioning profile for the AppStore.
  AppStoreCertificate: nventive.p12 # This is the official certificate used to sign AppStore builds.

  # Prerequisites - Service connections
  # Make sure you have the following service connections in your Azure pipeline library.
  GooglePlayServiceConnection: GooglePlay-nventive-ApplicationTemplate
  AppCenterServiceConnection: AppCenter-nventive-framework
  AppStoreServiceConnection: AppStore-nventive

  # AppCenter slugs
  # The "app slug" corresponds to the identifiers of the app in AppCenter; to find it, navigate to the app in a browser and;
  # the URL should look like this: https://appcenter.ms/orgs/{orgId}/apps/{appId}; the slug is simply: "{orgId}/{appId}".
  AppCenterAndroidSlug: 'nventive-framework/Application-Template-1'
  AppCenteriOSSlug: 'nventive-framework/Application-Template'
  AppCenterUWPSlug: 'nventive-framework/Application-Template-2'
  AppCenterAndroidSlug_Production: 'nventive-framework/ApplicationTemplate-Production-1'
  AppCenteriOSSlug_Production: 'nventive-framework/ApplicationTemplate-Production'
  AppCenterUWPSlug_Production: 'nventive-framework/ApplicationTemplate-Production-2'
  AppCenterAndroidSlug_Canary: 'nventive-framework/Application-Template-Canary-1'
  AppCenteriOSSlug_Canary: 'nventive-framework/Application-Template-Canary'
  AppCenterUWPSlug_Canary: 'nventive-framework/Application-Template-Canary-2'

  # Azure subscription
  # AzureSubscriptionName:
  # AzureStorageAccountName:

  # Solution to build
  SolutionFileName: ApplicationTemplate.sln

  # Pool names
  windowsPoolName: 'windows 1809'
  macOSPoolName: 'macOS'

  # Versions to use
  NUGET_VERSION: 5.11.0
  XAMARIN_IOS_VERSION: 15.0

  # Name of the folder where the artefacts will be placed. Variable used in build and release phases.
  # We make seperate folders so that releases can each download only the folder they need.
  AndroidArtifactName: Android
  iOSArtifactName: iOS
  UWPArtifactName: UWP
  WASMArtifactName: WASM
  TestsArtifactName: Tests

  # Path where packages (nuget or app packages) will be copied to.
  PackageOutputPath: $(Build.ArtifactStagingDirectory)

  # For Application.Building.Light optimizations
  IsLightBuild: $[eq(variables['Build.Reason'], 'PullRequest')]
  IsCanary: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries')]

  # Android variables (hosted agent)
  # ANDROID_NDK_HOME: C:\Microsoft\AndroidNDK64\android-ndk-r16b
  # ANDROID_NDK_PATH: C:\Microsoft\AndroidNDK64\android-ndk-r16b
  # AndroidNdkDirectory: C:\Microsoft\AndroidNDK64\android-ndk-r16b

  # iOS variables (hosted agent) / See ios-build-select-version.yml if needed.
  # xCodeRoot: '/Applications/Xcode_11.3.app'
  # XamarinSDKVersion: 6_6_0